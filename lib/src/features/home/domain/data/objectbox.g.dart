// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import '../entities/res_partner_model.dart';
import '../entities/res_partner_timestamp_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 5031648566663712555),
      name: 'ResPartnerModel',
      lastPropertyId: const obx_int.IdUid(5, 1459184061999199591),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5864443138131802018),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 379752608038182084),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6332952760668093474),
            name: 'lastIn',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5531551119946156695),
            name: 'lastOut',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1459184061999199591),
            name: 'activeIn',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 6615946011847114492),
      name: 'ResPartnerTimestamp',
      lastPropertyId: const obx_int.IdUid(4, 4148338265039377923),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7504706214384462083),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2233739877414108838),
            name: 'partnerId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 73611442833627602),
            name: 'timestamp',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4148338265039377923),
            name: 'type',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 6615946011847114492),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ResPartnerModel: obx_int.EntityDefinition<ResPartnerModel>(
        model: _entities[0],
        toOneRelations: (ResPartnerModel object) => [],
        toManyRelations: (ResPartnerModel object) => {},
        getId: (ResPartnerModel object) => object.id,
        setId: (ResPartnerModel object, int id) {
          object.id = id;
        },
        objectToFB: (ResPartnerModel object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.lastIn?.millisecondsSinceEpoch);
          fbb.addInt64(3, object.lastOut?.millisecondsSinceEpoch);
          fbb.addBool(4, object.activeIn);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final lastInValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final lastOutValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 10);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final lastInParam = lastInValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(lastInValue);
          final lastOutParam = lastOutValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(lastOutValue);
          final activeInParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false);
          final object = ResPartnerModel(
              id: idParam,
              name: nameParam,
              lastIn: lastInParam,
              lastOut: lastOutParam,
              activeIn: activeInParam);

          return object;
        }),
    ResPartnerTimestamp: obx_int.EntityDefinition<ResPartnerTimestamp>(
        model: _entities[1],
        toOneRelations: (ResPartnerTimestamp object) => [],
        toManyRelations: (ResPartnerTimestamp object) => {},
        getId: (ResPartnerTimestamp object) => object.id,
        setId: (ResPartnerTimestamp object, int id) {
          object.id = id;
        },
        objectToFB: (ResPartnerTimestamp object, fb.Builder fbb) {
          final typeOffset = fbb.writeString(object.type);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.partnerId);
          fbb.addInt64(2, object.timestamp.millisecondsSinceEpoch);
          fbb.addOffset(3, typeOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final partnerIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final timestampParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0));
          final typeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final object = ResPartnerTimestamp(
              id: idParam,
              partnerId: partnerIdParam,
              timestamp: timestampParam,
              type: typeParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ResPartnerModel] entity fields to define ObjectBox queries.
class ResPartnerModel_ {
  /// See [ResPartnerModel.id].
  static final id =
      obx.QueryIntegerProperty<ResPartnerModel>(_entities[0].properties[0]);

  /// See [ResPartnerModel.name].
  static final name =
      obx.QueryStringProperty<ResPartnerModel>(_entities[0].properties[1]);

  /// See [ResPartnerModel.lastIn].
  static final lastIn =
      obx.QueryDateProperty<ResPartnerModel>(_entities[0].properties[2]);

  /// See [ResPartnerModel.lastOut].
  static final lastOut =
      obx.QueryDateProperty<ResPartnerModel>(_entities[0].properties[3]);

  /// See [ResPartnerModel.activeIn].
  static final activeIn =
      obx.QueryBooleanProperty<ResPartnerModel>(_entities[0].properties[4]);
}

/// [ResPartnerTimestamp] entity fields to define ObjectBox queries.
class ResPartnerTimestamp_ {
  /// See [ResPartnerTimestamp.id].
  static final id =
      obx.QueryIntegerProperty<ResPartnerTimestamp>(_entities[1].properties[0]);

  /// See [ResPartnerTimestamp.partnerId].
  static final partnerId =
      obx.QueryIntegerProperty<ResPartnerTimestamp>(_entities[1].properties[1]);

  /// See [ResPartnerTimestamp.timestamp].
  static final timestamp =
      obx.QueryDateProperty<ResPartnerTimestamp>(_entities[1].properties[2]);

  /// See [ResPartnerTimestamp.type].
  static final type =
      obx.QueryStringProperty<ResPartnerTimestamp>(_entities[1].properties[3]);
}
